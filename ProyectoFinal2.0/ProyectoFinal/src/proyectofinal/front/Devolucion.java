/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyectofinal.front;
import proyectofinal.Backgrounds;

import java.awt.Graphics;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import proyectofinal.Inventario;
import proyectofinal.Multa;

/**
 *
 * @author maria
 */
public class Devolucion extends javax.swing.JFrame {
    DefaultTableModel modeloTabla;
    /**
     * Creates new form Devolucion
     * @param modeloPrestamo
     */
    public Devolucion(DefaultTableModel modeloPrestamo) {
        initComponents();
        
        if (modeloPrestamo != null) {
            tablaDevolucion.setModel(modeloPrestamo);
        } else {
            System.out.println("Error: modeloPrestamo es nulo.");
        }
          Inventario.llenarTabla();
    modeloTabla = Inventario.getModeloTabla();
    tableDevolverInventario.setModel(modeloTabla);
        
    }

    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new Backgrounds("/images/backgroundDev.png");
        jButtonDevolver = new javax.swing.JButton();
        jLabelDevolucion = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaDevolucion = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableDevolverInventario = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButtonDevolver.setText("DEVOLVER");
        jButtonDevolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDevolverActionPerformed(evt);
            }
        });

        jLabelDevolucion.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        jLabelDevolucion.setForeground(new java.awt.Color(255, 255, 255));
        jLabelDevolucion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelDevolucion.setText("DEVOLUCIÓN.");

        tablaDevolucion.setBackground(new java.awt.Color(0, 0, 0));
        tablaDevolucion.setForeground(new java.awt.Color(255, 255, 255));
        tablaDevolucion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Titulo 1", "Titulo 2", "Titulo 3"
            }
        ));
        tablaDevolucion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaDevolucionMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaDevolucion);

        tableDevolverInventario.setBackground(new java.awt.Color(0, 0, 0));
        tableDevolverInventario.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tableDevolverInventario.setForeground(new java.awt.Color(255, 255, 255));
        tableDevolverInventario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ));
        jScrollPane2.setViewportView(tableDevolverInventario);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 755, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonDevolver, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabelDevolucion, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(282, 282, 282))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabelDevolucion, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(jButtonDevolver, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tablaDevolucionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaDevolucionMouseClicked
      int fila = tablaDevolucion.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(null, "No seleccionó una fila", "Seleccionar fila", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_tablaDevolucionMouseClicked

    private void jButtonDevolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDevolverActionPerformed
int fila = tablaDevolucion.getSelectedRow();
    
    if (fila == -1) {
        JOptionPane.showMessageDialog(null, "No seleccionó fila", "Seleccionar fila", JOptionPane.WARNING_MESSAGE);
        return;
    }

    // Obtener la fecha de devolución de la tabla
    String plazo = tablaDevolucion.getValueAt(fila, 2).toString(); // Suponiendo que la columna 2 es "Plazo"
    String[] fechas = plazo.split(" - "); // Separar el rango de fechas
    
    if (fechas.length < 2) {
        JOptionPane.showMessageDialog(null, "Error en el formato de fecha: " + plazo, "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    try {
        // Intentar convertir la fecha
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        sdf.setLenient(false); // Desactiva tolerancia para evitar conversiones erróneas

        Date fechaDevolucion = sdf.parse(fechas[1].trim()); // Segunda fecha es la de devolución
        Date fechaActual = new Date(); // Fecha actual

        // Calcular días de retraso y multa
        int diasRetraso = Multa.calcularDiasRetraso(fechaDevolucion, fechaActual);
        double multa = Multa.calcularMulta(fechaDevolucion, fechaActual);
        
        if (diasRetraso > 0) {
            JOptionPane.showMessageDialog(null, "El libro tiene " + diasRetraso + " días de retraso.", "Aviso de Retraso", JOptionPane.WARNING_MESSAGE);
            JOptionPane.showMessageDialog(null, "El usuario tiene una multa de $" + multa, "Multa por retraso", JOptionPane.WARNING_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Devolución exitosa. No hay multa.", "Devolución", JOptionPane.INFORMATION_MESSAGE);
        }

        // Actualizar la tabla de inventario (sumar 1 a la cantidad)
        DefaultTableModel modeloInventario = (DefaultTableModel) tableDevolverInventario.getModel();
        String idLibro = tablaDevolucion.getValueAt(fila, 0).toString(); // Suponiendo que la columna 0 es el ID
 
        for (int i = 0; i < modeloInventario.getRowCount(); i++) {
            if (modeloInventario.getValueAt(i, 3).toString().equals(idLibro)) { // Columna 3 es "ID Libro"
                int stockActual = Integer.parseInt(modeloInventario.getValueAt(i, 4).toString()); // Columna 4 es "Stock"
                modeloInventario.setValueAt(stockActual + 1, i, 4); // Sumar 1 al stock
                break;
            }
        }

        // Eliminar la fila de la tabla de préstamos
        DefaultTableModel modeloDevolucion = (DefaultTableModel) tablaDevolucion.getModel();
        modeloDevolucion.removeRow(fila);

    } catch (ParseException e) {
        JOptionPane.showMessageDialog(null, "Error al convertir la fecha. Verifique el formato en la tabla.\nFormato esperado: dd/MM/yyyy\n" + e.getMessage(), "Error de Fecha", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    }
    Timer timer = new Timer(3000, new ActionListener() {
    @Override
    public void actionPerformed(ActionEvent e) {
        dispose(); // Cierra la ventana después del tiempo
    }
});
timer.setRepeats(false); // Para que solo se ejecute una vez
timer.start();
    
    }//GEN-LAST:event_jButtonDevolverActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Devolucion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Devolucion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Devolucion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Devolucion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
            }
        });
    }
    /*class BackgroundPanel extends JPanel
    {
    private Image imagen;
    
    @Override
    public void paint(Graphics g){
        
    setOpaque(false);
    imagen = new ImageIcon(getClass().getResource("/images/backgroundDev.png")).getImage();
    g.drawImage(imagen, 0, 0, getWidth(),getHeight(),this);
        
        super.paint(g);
    }
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDevolver;
    private javax.swing.JLabel jLabelDevolucion;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tablaDevolucion;
    private javax.swing.JTable tableDevolverInventario;
    // End of variables declaration//GEN-END:variables

}